name: Spring Boot CI/CD

on:
  push:
    branches:
      - main
      - 'releases/**'

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: kithubs3bucket
  AWS_CODE_DEPLOY_APPLICATION: Facilities_Info
  AWS_CODE_DEPLOY_GROUP: kitHub-CD-Group

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: main 브랜치로 이동
        uses: actions/checkout@v3
        with:
          ref: main
          
      - name: JDK 17 설치
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          
      - name: gradlew에 실행 권한 부여
        run: chmod +x ./gradlew
        
      - name: 🔐 application.yml 파일 생성
        run: |
          cat <<EOF > src/main/resources/application.yml
          spring:
            sql:
              init:
                encoding: utf-8
                
            http:
              encoding:
                charset: UTF-8
                enabled: true
                force: true

            datasource:
              url: ${{ secrets.DB_URL }}
              username: ${{ secrets.DB_USERNAME }}
              password: ${{ secrets.DB_PASSWORD }}

            jpa:
              database-platform: org.hibernate.dialect.MySQL57Dialect
              hibernate:
                ddl-auto: update
              show-sql: true

            servlet:
              multipart:
                max-file-size: 10MB
                max-request-size: 20MB

            mail:
              host: smtp.gmail.com
              port: 587
              username: ${{ secrets.MAIL_USERNAME }}
              password: ${{ secrets.MAIL_PASSWORD }}
              properties:
                mail.smtp.auth: true
                mail.smtp.starttls.enable: true
                mail.smtp.starttls.required: true

          jwt:
            issuer: Facilities-map-service
            secret_key: ${{ secrets.JWT_SECRET_KEY }}

          EOF
        
      - name: 프로젝트 빌드
        run: ./gradlew clean build -x test
        
      - name: AWS 자격 증명 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_CICD_SECRET_KEY }}
          
      - name: S3에 업로드
        run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://$AWS_S3_BUCKET/$AWS_CODE_DEPLOY_APPLICATION/$GITHUB_SHA.zip --source .
     
      - name: EC2에 배포
        run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=$AWS_CODE_DEPLOY_APPLICATION/$GITHUB_SHA.zip,bundleType=zip
